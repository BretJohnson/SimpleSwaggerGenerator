#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace AutoRest.CSharp.Templates.Rest.Client
{

#line 2 "ServiceClientInterfaceTemplate.cshtml"
using System;

#line default
#line hidden
using System.Collections.Generic;

#line 3 "ServiceClientInterfaceTemplate.cshtml"
using System.Linq;

#line default
#line hidden
using System.Text;

#line 4 "ServiceClientInterfaceTemplate.cshtml"
using AutoRest.Core.Utilities;

#line default
#line hidden

#line 5 "ServiceClientInterfaceTemplate.cshtml"
using AutoRest.CSharp.Model;

#line default
#line hidden


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class ServiceClientInterfaceTemplate : AutoRest.Core.Template<CodeModelCs>
{

#line hidden

public override void Execute()
{

#line 7 "ServiceClientInterfaceTemplate.cshtml"
Write(Header("// "));


#line default
#line hidden
WriteLiteral("\n");


#line 8 "ServiceClientInterfaceTemplate.cshtml"
Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\nnamespace ");


#line 9 "ServiceClientInterfaceTemplate.cshtml"
     Write(Settings.Namespace);


#line default
#line hidden
WriteLiteral("\n{\n");


#line 11 "ServiceClientInterfaceTemplate.cshtml"
 foreach (var usingString in Model.Usings) {


#line default
#line hidden
WriteLiteral("    ");

WriteLiteral("using ");


#line 12 "ServiceClientInterfaceTemplate.cshtml"
       Write(usingString);


#line default
#line hidden
WriteLiteral(";\n");


#line 13 "ServiceClientInterfaceTemplate.cshtml"
}


#line default
#line hidden

#line 14 "ServiceClientInterfaceTemplate.cshtml"
Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\n    /// <summary>\n");

WriteLiteral("    ");


#line 16 "ServiceClientInterfaceTemplate.cshtml"
Write(WrapComment("/// ", Model.Documentation.EscapeXmlComment()));


#line default
#line hidden
WriteLiteral("\n    /// </summary>\n    public partial interface I");


#line 18 "ServiceClientInterfaceTemplate.cshtml"
                          Write(Model.Name);


#line default
#line hidden
WriteLiteral(" : System.IDisposable\n    {\n        /// <summary>\n        /// The base URI of the" +
" service.\n        /// </summary>\n");


#line 23 "ServiceClientInterfaceTemplate.cshtml"
        

#line default
#line hidden

#line 23 "ServiceClientInterfaceTemplate.cshtml"
         if (!Model.IsCustomBaseUri)
        {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("System.Uri BaseUri { get; set; }\n");


#line 26 "ServiceClientInterfaceTemplate.cshtml"
        }


#line default
#line hidden
WriteLiteral("        \n");

WriteLiteral("        ");


#line 28 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\n\n        /// <summary>\n        /// Gets or sets json serialization settings.\n   " +
"     /// </summary>\n        Newtonsoft.Json.JsonSerializerSettings Serialization" +
"Settings { get; }\n");

WriteLiteral("        ");


#line 34 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\n\n        /// <summary>\n        /// Gets or sets json deserialization settings.\n " +
"       /// </summary>\n        Newtonsoft.Json.JsonSerializerSettings Deserializa" +
"tionSettings { get; }\n");

WriteLiteral("        ");


#line 40 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\n\n");


#line 42 "ServiceClientInterfaceTemplate.cshtml"
        

#line default
#line hidden

#line 42 "ServiceClientInterfaceTemplate.cshtml"
         foreach (var property in Model.Properties)
        {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <summary>\n");

WriteLiteral("        ");


#line 45 "ServiceClientInterfaceTemplate.cshtml"
     Write(WrapComment("/// ", property.Documentation.EscapeXmlComment()));


#line default
#line hidden
WriteLiteral("\n");

WriteLiteral("        ");

WriteLiteral("/// </summary>\n");

WriteLiteral("        ");


#line 47 "ServiceClientInterfaceTemplate.cshtml"
     Write(property.ModelTypeName);


#line default
#line hidden
WriteLiteral(" ");


#line 47 "ServiceClientInterfaceTemplate.cshtml"
                             Write(property.Name);


#line default
#line hidden
WriteLiteral(" { get;");


#line 47 "ServiceClientInterfaceTemplate.cshtml"
                                                   Write(property.IsReadOnly || property.IsConstant ? "" : " set;");


#line default
#line hidden
WriteLiteral(" }\n");


#line 48 "ServiceClientInterfaceTemplate.cshtml"
        

#line default
#line hidden

#line 48 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden

#line 48 "ServiceClientInterfaceTemplate.cshtml"
                  
        }


#line default
#line hidden
WriteLiteral("\n");

WriteLiteral("        ");


#line 51 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden
WriteLiteral("\n");


#line 52 "ServiceClientInterfaceTemplate.cshtml"
    

#line default
#line hidden

#line 52 "ServiceClientInterfaceTemplate.cshtml"
     foreach(var operation in Model.AllOperations)
    {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <summary>\n");

WriteLiteral("        ");

WriteLiteral("/// Gets the I");


#line 55 "ServiceClientInterfaceTemplate.cshtml"
                    Write(operation.TypeName);


#line default
#line hidden
WriteLiteral(".\n");

WriteLiteral("        ");

WriteLiteral("/// </summary>\n");

WriteLiteral("        ");

WriteLiteral("I");


#line 57 "ServiceClientInterfaceTemplate.cshtml"
       Write(operation.TypeName);


#line default
#line hidden
WriteLiteral(" ");


#line 57 "ServiceClientInterfaceTemplate.cshtml"
                             Write(operation.NameForProperty);


#line default
#line hidden
WriteLiteral(" { get; }\n");


#line 58 "ServiceClientInterfaceTemplate.cshtml"
        

#line default
#line hidden

#line 58 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden

#line 58 "ServiceClientInterfaceTemplate.cshtml"
                  


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("\n");


#line 60 "ServiceClientInterfaceTemplate.cshtml"
    }


#line default
#line hidden
WriteLiteral("     \n");


#line 62 "ServiceClientInterfaceTemplate.cshtml"
    

#line default
#line hidden

#line 62 "ServiceClientInterfaceTemplate.cshtml"
     foreach(MethodCs method in Model.Methods.Where( each => each.Group.IsNullOrEmpty()) )
    {
        if (!String.IsNullOrEmpty(method.Description) || !String.IsNullOrEmpty(method.Summary))
        {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <summary>\n");

WriteLiteral("        ");


#line 67 "ServiceClientInterfaceTemplate.cshtml"
     Write(WrapComment("/// ", String.IsNullOrEmpty(method.Summary) ? method.Description.EscapeXmlComment() : method.Summary.EscapeXmlComment()));


#line default
#line hidden
WriteLiteral("\n");

WriteLiteral("        ");

WriteLiteral("/// </summary>\n");


#line 69 "ServiceClientInterfaceTemplate.cshtml"
        }
        if (!String.IsNullOrEmpty(method.Description) && !String.IsNullOrEmpty(method.Summary))
        {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <remarks>\n");

WriteLiteral("        ");


#line 73 "ServiceClientInterfaceTemplate.cshtml"
     Write(WrapComment("/// ", method.Description.EscapeXmlComment()));


#line default
#line hidden
WriteLiteral("\n");

WriteLiteral("        ");

WriteLiteral("/// </remarks>\n");


#line 75 "ServiceClientInterfaceTemplate.cshtml"
        }
        foreach (var parameter in method.LocalParameters)
        {


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <param name=\'");


#line 78 "ServiceClientInterfaceTemplate.cshtml"
                      Write(parameter.Name);


#line default
#line hidden
WriteLiteral("\'>\n");

WriteLiteral("        ");


#line 79 "ServiceClientInterfaceTemplate.cshtml"
     Write(WrapComment("/// ", parameter.Documentation.EscapeXmlComment()));


#line default
#line hidden
WriteLiteral("\n");

WriteLiteral("        ");

WriteLiteral("/// </param>\n");


#line 81 "ServiceClientInterfaceTemplate.cshtml"
        }


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("/// <param name=\'customHeaders\'>\n");

WriteLiteral("        ");

WriteLiteral("/// The headers that will be added to request.\n");

WriteLiteral("        ");

WriteLiteral("/// </param>\n");

WriteLiteral("        ");

WriteLiteral("/// <param name=\'cancellationToken\'>\n");

WriteLiteral("        ");

WriteLiteral("/// The cancellation token.\n");

WriteLiteral("        ");

WriteLiteral("/// </param>\n");

WriteLiteral("        ");

WriteLiteral("System.Threading.Tasks.Task<");


#line 88 "ServiceClientInterfaceTemplate.cshtml"
                                  Write(method.OperationResponseReturnTypeString);


#line default
#line hidden
WriteLiteral("> ");


#line 88 "ServiceClientInterfaceTemplate.cshtml"
                                                                               Write(method.Name);


#line default
#line hidden
WriteLiteral("WithHttpMessagesAsync(");


#line 88 "ServiceClientInterfaceTemplate.cshtml"
                                                                                                                   Write(method.GetAsyncMethodParameterDeclaration(true));


#line default
#line hidden
WriteLiteral(");\n");


#line 89 "ServiceClientInterfaceTemplate.cshtml"
        

#line default
#line hidden

#line 89 "ServiceClientInterfaceTemplate.cshtml"
   Write(EmptyLine);


#line default
#line hidden

#line 89 "ServiceClientInterfaceTemplate.cshtml"
                  


#line default
#line hidden
WriteLiteral("        ");

WriteLiteral("\n");


#line 91 "ServiceClientInterfaceTemplate.cshtml"
    }


#line default
#line hidden
WriteLiteral("\n    }\n}\n");

}
}
}
#pragma warning restore 1591
